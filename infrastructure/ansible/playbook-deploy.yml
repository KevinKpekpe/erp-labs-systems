---
# Playbook de d√©ploiement ERP Labs Systems
# Version DevOps Junior - Utilise Minikube

- name: D√©ploiement ERP Labs Systems sur Kubernetes
  hosts: app-server
  become: yes
  become_user: vagrant
  vars:
    migrations_dir: /tmp/erp-migrations
    git_commit_sha: "{{ git_commit_sha | default('latest') }}"
    environment: "{{ environment | default('production') }}"
    namespace: erp-labs-systems

  tasks:
    - name: V√©rifier que Minikube est en cours d'ex√©cution
      shell: minikube start --driver=docker --force
      register: minikube_start
      changed_when: minikube_start.rc == 0

    - name: Attendre que Minikube soit pr√™t
      wait_for:
        port: 8443
        host: "{{ ansible_default_ipv4.address }}"
        timeout: 300

    - name: Cr√©er le namespace s'il n'existe pas
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: "{{ namespace }}"
      delegate_to: localhost

    - name: Cr√©er le r√©pertoire des migrations
      file:
        path: "{{ migrations_dir }}"
        state: directory
        mode: '0755'

    - name: Copier les fichiers de migration
      copy:
        src: "{{ item }}"
        dest: "{{ migrations_dir }}/"
        mode: '0644'
      with_fileglob:
        - "database/migrations/*.sql"

    - name: R√©cup√©rer le nom du pod MySQL
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: "{{ namespace }}"
        label_selectors:
          - app=erp-mysql
      register: mysql_pods
      delegate_to: localhost

    - name: D√©finir le nom du pod MySQL
      set_fact:
        mysql_pod_name: "{{ mysql_pods.resources[0].metadata.name }}"

    - name: Attendre que MySQL soit pr√™t
      kubernetes.core.k8s_exec:
        namespace: "{{ namespace }}"
        pod: "{{ mysql_pod_name }}"
        command: mysql -u root -prootpassword -e "SELECT 1;"
      register: mysql_ready
      until: mysql_ready.rc == 0
      retries: 30
      delay: 10
      delegate_to: localhost

    - name: Appliquer les migrations de base de donn√©es
      kubernetes.core.k8s_exec:
        namespace: "{{ namespace }}"
        pod: "{{ mysql_pod_name }}"
        command: |
          mysql -u root -prootpassword -e "
          USE erp_labs_systems_app_complete;
          source {{ migrations_dir }}/{{ item | basename }};
          "
      with_fileglob:
        - "database/migrations/*.sql"
      register: migration_results
      delegate_to: localhost

    - name: Afficher les r√©sultats des migrations
      debug:
        msg: "Migration {{ item.item | basename }} appliqu√©e avec succ√®s"
      when: item.rc == 0
      loop: "{{ migration_results.results }}"

    - name: V√©rifier la version de la base de donn√©es
      kubernetes.core.k8s_exec:
        namespace: "{{ namespace }}"
        pod: "{{ mysql_pod_name }}"
        command: |
          mysql -u root -prootpassword -e "
          USE erp_labs_systems_app_complete;
          SELECT key_name, key_value FROM database_metadata WHERE key_name IN ('database_version', 'last_migration');
          "
      register: db_version
      delegate_to: localhost

    - name: Afficher la version de la base de donn√©es
      debug:
        msg: "{{ db_version.stdout }}"

    - name: Mettre √† jour l'image du backend
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: erp-backend
            namespace: "{{ namespace }}"
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: erp-backend
            template:
              metadata:
                labels:
                  app: erp-backend
              spec:
                containers:
                - name: erp-backend
                  image: "spectredoc/erp-backend:{{ git_commit_sha }}"
                  ports:
                  - containerPort: 8080
                  env:
                  - name: SPRING_DATASOURCE_URL
                    value: "jdbc:mysql://erp-mysql:3306/erp_labs_systems_app_complete"
                  - name: SPRING_DATASOURCE_USERNAME
                    value: "root"
                  - name: SPRING_DATASOURCE_PASSWORD
                    value: "rootpassword"
                  - name: SPRING_JPA_HIBERNATE_DDL_AUTO
                    value: "validate"
                  resources:
                    requests:
                      memory: "512Mi"
                      cpu: "250m"
                    limits:
                      memory: "1Gi"
                      cpu: "500m"
      delegate_to: localhost

    - name: Mettre √† jour l'image du frontend
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: erp-frontend
            namespace: "{{ namespace }}"
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: erp-frontend
            template:
              metadata:
                labels:
                  app: erp-frontend
              spec:
                containers:
                - name: erp-frontend
                  image: "spectredoc/erp-frontend:{{ git_commit_sha }}"
                  ports:
                  - containerPort: 80
                  env:
                  - name: REACT_APP_API_URL
                    value: "http://erp-backend:8080"
                  - name: REACT_APP_API_TIMEOUT
                    value: "30000"
                  - name: NODE_ENV
                    value: "{{ environment }}"
                  resources:
                    requests:
                      memory: "256Mi"
                      cpu: "100m"
                    limits:
                      memory: "512Mi"
                      cpu: "200m"
      delegate_to: localhost

    - name: Attendre que les d√©ploiements soient pr√™ts
      kubernetes.core.k8s_info:
        kind: Deployment
        namespace: "{{ namespace }}"
        name: "{{ item }}"
      register: deployment_status
      until: deployment_status.resources[0].status.ready_replicas == 1
      retries: 30
      delay: 10
      loop:
        - erp-backend
        - erp-frontend
      delegate_to: localhost

    - name: V√©rifier l'√©tat des pods
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: "{{ namespace }}"
        label_selectors:
          - app in (erp-backend,erp-frontend,erp-mysql)
      register: pods_status
      delegate_to: localhost

    - name: Afficher l'√©tat des pods
      debug:
        msg: "Pod {{ item.metadata.name }} - Status: {{ item.status.phase }}"
      loop: "{{ pods_status.resources }}"

    - name: V√©rifier les services
      kubernetes.core.k8s_info:
        kind: Service
        namespace: "{{ namespace }}"
      register: services_status
      delegate_to: localhost

    - name: Afficher les services
      debug:
        msg: "Service {{ item.metadata.name }} - Port: {{ item.spec.ports[0].port }}"
      loop: "{{ services_status.resources }}"

    - name: Nettoyer les fichiers de migration temporaires
      file:
        path: "{{ migrations_dir }}"
        state: absent

    - name: Afficher les URLs d'acc√®s
      debug:
        msg: |
          üéâ D√©ploiement termin√© avec succ√®s !
          
          üì± Frontend: http://192.168.56.11:30080
          üîß Backend: http://192.168.56.11:30081
          üìä Dashboard: http://192.168.56.11:30000
          
          üîë Pour acc√©der depuis l'ext√©rieur, utilisez SSH tunneling:
          ssh -L 30080:192.168.49.2:30080 -L 30081:192.168.49.2:30081 vagrant@192.168.56.11 